/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.109
 * Generated at: 2021-05-23 14:13:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reply_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\" />\r\n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge, chrome=1\" />\r\n");
      out.write("\t\t<title>comment</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/include/css/reply.css\"/>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t/* 기본 덧글 목록 불러오기 */\r\n");
      out.write("\t\t\tvar b_num = \"");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("\t\t\tlistAll(b_num);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* 덧글 내용 저장 */\r\n");
      out.write("\t\t\t$(document).on(\"click\",\"#replyInsert\", function(){\r\n");
      out.write("\t\t\t\talert(\"저장 버튼 클릭\");\r\n");
      out.write("\t\t\t\tvar insertUrl = \"/replies/replyInsert.som\";\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : insertUrl,\r\n");
      out.write("\t\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\t\theaders : {\r\n");
      out.write("\t\t\t\t\t\t\"Content-Type\" : \"application/json\",\r\n");
      out.write("\t\t\t\t\t\t\"X-HTTP-Method-Override\" : \"POST\"\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tdataType : \"text\",\r\n");
      out.write("\t\t\t\t\tdata : JSON.stringify({\r\n");
      out.write("\t\t\t\t\t\tb_num : b_num,\r\n");
      out.write("\t\t\t\t\t\tr_name : $(\"#r_name\").val(),\r\n");
      out.write("\t\t\t\t\t\tr_pwd : $(\"#r_pwd\").val(),\r\n");
      out.write("\t\t\t\t\t\tr_content : $(\"#r_content\").val()\r\n");
      out.write("\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\terror : function(){\r\n");
      out.write("\t\t\t\t\t\talert(\"오류가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tsuccess : function(resultData){\r\n");
      out.write("\t\t\t\t\t\tif(resultData==\"SUCCESS\"){\r\n");
      out.write("\t\t\t\t\t\t\talert(\"덧글 등록이 완료되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\tdataReset();\r\n");
      out.write("\t\t\t\t\t\t\tlistAll(b_num);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* 수정 버튼 클릭 시 수정폼 출력 */\r\n");
      out.write("\t\t\t$(document).on(\"click\", \".update_form\", function(){\r\n");
      out.write("\t\t\t\talert(\"수정클릭\");\r\n");
      out.write("\t\t\t\tvar conText = $(this).parents(\"li\").children().eq(1).html(); // 내용\r\n");
      out.write("\t\t\t\tconsole.log(\"[log] conText : \" + conText);\r\n");
      out.write("\t\t\t\t$(this).parents(\"li\").find(\"input[type='button']\").hide();\r\n");
      out.write("\t\t\t\t$(this).parents(\"li\").children().eq(0).html();\r\n");
      out.write("\t\t\t\tvar conArea = $(this).parents(\"li\").children().eq(1);\t\t\t\t\r\n");
      out.write("\t\t\t\tconArea.html(\"\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar data = \"<textarea name='content' id='content'>\" + conText + \"</textarea>\";\r\n");
      out.write("\t\t\t\tdata += \"<input type='button' class='update_btn' value='수정완료'>\";\r\n");
      out.write("\t\t\t\tdata += \"<input type='button' class='reset_btn' value='수정취소'>\";\r\n");
      out.write("\t\t\t\tconArea.html(data);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* 글 수정 Ajax */\r\n");
      out.write("\t\t\t$(document).on(\"click\", \".update_btn\", function(){\r\n");
      out.write("\t\t\t\tvar r_num = $(this).parents(\"li\").attr(\"data-num\");\r\n");
      out.write("\t\t\t\tvar r_content = $(\"#content\").val();\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : '/replies/' + r_num + '.som',\r\n");
      out.write("\t\t\t\t\ttype : 'PUT',\r\n");
      out.write("\t\t\t\t\theaders : {\r\n");
      out.write("\t\t\t\t\t\t\t\"Content-Type\" : \"application/json\",\r\n");
      out.write("\t\t\t\t\t\t\t\"X-HTTP-Method-Override\" : \"PUT\"},\r\n");
      out.write("\t\t\t\t\tdata : JSON.stringify({\r\n");
      out.write("\t\t\t\t\t\t\tr_content:r_content}),\r\n");
      out.write("\t\t\t\t\tdataType : 'text',\r\n");
      out.write("\t\t\t\t\tsuccess : function(result){\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(\"result : \" + result);\r\n");
      out.write("\t\t\t\t\t\t\tif(result == 'SUCCESS'){\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"수정되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\tlistAll(b_num);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* 글 삭제 Ajax */\r\n");
      out.write("\t\t\t$(document).on(\"click\", \".delete_btn\", function(){\r\n");
      out.write("\t\t\t\talert(\"삭제 클릭\");\r\n");
      out.write("\t\t\t\tvar r_num = $(this).parents(\"li\").attr(\"data-num\");\r\n");
      out.write("\t\t\t\tconsole.log(\"r_num : \" + r_num);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(confirm(\"선택하신 댓글을 삭제하시겠습니까?\")){\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\ttype : 'delete',\r\n");
      out.write("\t\t\t\t\t\turl : '/replies/' + r_num + \".som\",\r\n");
      out.write("\t\t\t\t\t\theaders : {\r\n");
      out.write("\t\t\t\t\t\t\t\"Content-Type\" : \"application/json\",\r\n");
      out.write("\t\t\t\t\t\t\t\"X-HTTP-Method-Override\" : \"DELETE\"\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tdataType : 'text',\r\n");
      out.write("\t\t\t\t\t\tsuccess : function(result){\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(\"result : \" + result);\r\n");
      out.write("\t\t\t\t\t\t\tif(result == \"SUCCESS\"){\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"삭제되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\tlistAll(b_num);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 리스트 요청 험수\r\n");
      out.write("\t\t\tfunction listAll(b_num){\r\n");
      out.write("\t\t\t\t$(\"#comment_list\").html(\"\");\r\n");
      out.write("\t\t\t\tvar url = \"/replies/all/\" + b_num + \".som\";\r\n");
      out.write("\t\t\t\t$.getJSON(url, function(data){\r\n");
      out.write("\t\t\t\t\tconsole.log(data.length);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(data).each(function(){\r\n");
      out.write("\t\t\t\t\t\tvar r_num = this.r_num;\r\n");
      out.write("\t\t\t\t\t\tvar r_name = this.r_name;\r\n");
      out.write("\t\t\t\t\t\tvar r_content = this.r_content;\r\n");
      out.write("\t\t\t\t\t\tvar r_insertdate = this.r_insertdate;\r\n");
      out.write("\t\t\t\t\t\taddNewItem(r_num, r_name, r_content, r_insertdate);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}).fail(function(){\r\n");
      out.write("\t\t\t\t\talert(\"덧글 목록을 불러오는데 실패했습니다.\");\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 새로운 글 화면 추가하는 함수\r\n");
      out.write("\t\t\tfunction addNewItem(r_num, r_name, r_content, r_insertdate){\r\n");
      out.write("\t\t\t\t// 새 글 추가될 li태그 객체\r\n");
      out.write("\t\t\t\tvar new_li = $(\"<li>\");\r\n");
      out.write("\t\t\t\tnew_li.attr(\"data-num\", r_num);\r\n");
      out.write("\t\t\t\tnew_li.addClass(\"comment_item\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 작성자 정보 지정될 <p>태그\r\n");
      out.write("\t\t\t\tvar writer_p = $(\"<p>\");\r\n");
      out.write("\t\t\t\twriter_p.addClass(\"writer\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 작성자 정보 이름\r\n");
      out.write("\t\t\t\tvar name_span = $(\"<span>\");\r\n");
      out.write("\t\t\t\tname_span.addClass(\"name\");\r\n");
      out.write("\t\t\t\tname_span.html(r_name + \"님\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 작성일시\r\n");
      out.write("\t\t\t\tvar insertdate_span = $(\"<span>\");\r\n");
      out.write("\t\t\t\tinsertdate_span.html(\"/\" + r_insertdate + \" \");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 수정 버튼\r\n");
      out.write("\t\t\t\tvar up_input = $(\"<input>\");\r\n");
      out.write("\t\t\t\tup_input.attr({\"type\" : \"button\", \"value\" : \"수정하기\"});\r\n");
      out.write("\t\t\t\tup_input.addClass(\"update_form\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 삭제 버튼\r\n");
      out.write("\t\t\t\tvar del_input = $(\"<input>\");\r\n");
      out.write("\t\t\t\tdel_input.attr({\"type\" : \"button\", \"value\" : \"삭제하기\"});\r\n");
      out.write("\t\t\t\tdel_input.addClass(\"delete_btn\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 내용\r\n");
      out.write("\t\t\t\tvar content_p = $(\"<p>\");\r\n");
      out.write("\t\t\t\tcontent_p.addClass(\"con\");\r\n");
      out.write("\t\t\t\tcontent_p.html(r_content);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 조립\r\n");
      out.write("\t\t\t\twriter_p.append(name_span).append(insertdate_span).append(up_input).append(del_input);\r\n");
      out.write("\t\t\t\tnew_li.append(writer_p).append(content_p);\r\n");
      out.write("\t\t\t\t$(\"#comment_list\").append(new_li);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// input 태그 초기화\r\n");
      out.write("\t\t\tfunction dataReset(){\r\n");
      out.write("\t\t\t\t$(\"r_name\").val(\"\");\r\n");
      out.write("\t\t\t\t$(\"r_pwd\").val(\"\");\r\n");
      out.write("\t\t\t\t$(\"r_content\").val(\"\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<div id=\"replyContainer\">\r\n");
      out.write("\t\t\t<h1></h1>\r\n");
      out.write("\t\t\t<div id=\"comment_write\">\r\n");
      out.write("\t\t\t\t<form id=\"comment_form\">\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<label for=\"r_name\"> 작성자 </label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"r_name\" id=\"r_name\" />\r\n");
      out.write("\t\t\t\t\t\t<label for=\"r_pwd\"> 비밀번호 </label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" name=\"r_pwd\" id=\"r_pwd\" />\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" id=\"replyInsert\" value=\"댓글쓰기\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<label for=\"r_content\"> 댓글 내용 </label>\r\n");
      out.write("\t\t\t\t\t\t<textarea name=\"r_content\" id=\"r_content\"></textarea>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<ul id=\"comment_list\">\r\n");
      out.write("\t\t\t\t<!-- 여기에 동적 생성 요소가 들어가게 됨 -->\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /WEB-INF/jsp/board/reply.jsp(15,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDetail.b_num}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }
}
